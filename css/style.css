/*
COLORS:

Light green: #7ed56f
Medium green: #55c57a
Dark green: #28b485

*/

* {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
}
/* everything related to font goes into body selector, 
but margin and padding cant be inherited here, 
that goes in the universal selector above 
*/

body {
  /* font details in body is a case of inheritence, 
     whereas the padding attribute of the body is not inheritence. */
  font-family: "Lato", sans-serif;
  font-weight: 400;
  font-size: 16px;
  line-height: 1.7;
  color: #777;
  /* padding on the body puts a nice frame around the entire web page-break-inside */
  padding: 30px;
}

.header {
  height: 95vh;
  /*****************    MASK OVER BACKGROUND IMAGE    **********************************************
  to use a mask over the top of the image we add a second image to the bg-image attribute using a comma
  ************************************************************************************************/
  background-image: linear-gradient(
      to right bottom,
      rgba(126, 213, 111, 0.748),
      rgba(40, 180, 133, 0.714)
    ),
    url("../img/hero.jpg");
  background-size: cover;
  /* bg-position:top anchors the top of the image to always stay glued to top of window */
  background-position: top;
  position: relative;

  /*this is how you can change the shape of your image frame using clip-path to define coordinate points.
    starting top-left, top-right, bottom-right, bottom-left
  clip-path: polygon(x y, x y, x y, x y) coordinates are in relation to top left corner left -> right top -> bottom*/
  clip-path: polygon(0 0, 100% 0, 100% 75vh, 0 100%);
}

.logo-box {
  /* set the logo in a box so you can make it stay in the same place within its parent container 
     set this div to absolute so it stays where you want it within its parent.
  */
  position: absolute;
  top: 40px;
  left: 40px;
}

.logo {
  height: 35px;
}

.logo:hover {
  animation: moveInRight 3s ease-out;
}

.heading-primary {
  color: #fff;
  text-transform: uppercase;
  /*when you animate something you hide the back part so you don't see the shaking and smooths things out*/
  backface-visibility: hidden;
  margin-bottom: 60px;
}

.heading-primary-main {
  /* get the h1 spans to stack on top of one another, but span is an inline element
  you need to change it to a block element so it will stack */
  display: block;
  font-size: 60px;
  font-weight: 400;
  letter-spacing: 35px;

  animation-name: moveInLeft;
  animation-duration: 2s;
  animation-timing-function: ease-out;
  /* animation-delay: 3s;
  animation-iteration-count: 3; */
}

.heading-primary-sub {
  /* get the h1 spans to stack on top of one another, but span is an inline element
  you need to change it to a block element so it will stack */
  display: block;
  font-size: 20px;
  font-weight: 700;
  letter-spacing: 17px;
  /*animation short hand all in one line*/
  animation: moveInRight 3s ease-out;
  animation: transform rotate(180deg);
  /*animation-name: moveInRight;
    animation-duration: 2s;
    animation-timing-function: ease-out; */
}
/*********   ANIMATIONS   ***************/

@keyframes moveInLeft {
  0% {
    opacity: 0;
    transform: translateX(-100px);
  }
  80% {
    transform: translateX(20px);
  }
  100% {
    opacity: 1;
    transform: translate(0);
  }
}

@keyframes moveInRight {
  0% {
    opacity: 0;
    transform: translateX(100px) rotate(-50deg);
  }

  60% {
    transform: rotate(120deg);
  }

  80% {
    transform: translateX(-20px);
  }
  100% {
    opacity: 1;
    transform: translate(0);
  }
}

.text-box {
  /* the parent div position will make its children "relative" within it
  the .text-box position is set to absolute so it doesn't change from the position inside its parent */
  position: absolute;
  top: 40%;
  left: 50%;
  /* the top/left will position the element according to its parent
  the transform:translate will position the element based on its own shape */
  transform: translate(-50%, -50%);
  /* Since this anchor tag is also an inline element we can treat it as text
  so to center text all we need is text-align: center */
  text-align: center;
}

.btn:link,
.btn:visited {
  text-transform: uppercase;
  text-decoration: none;
  border-radius: 100px;
  /* 'all' transitions will be finished being animated within .2 seconds */
  transition: all 0.2s;

  /* currently this button is only an anchor tag, which is an inline element
  we want to add margin/padding to top/bottom of button
  so change the display to inline-block to get the box model marg/pad
  */
  display: inline-block;
  padding: 15px 40px;
}

.btn:hover {
  transform: translateY(-3px);
  /* box shadow arguments are X Y blur color */
  box-shadow: 0 10px 20px rgba(0, 0, 0, 0.2);
}

.btn:active {
  transform: translateY(-1px);
  box-shadow: 0 5px 10px rgba(0, 0, 0, 0.3);
}

.btn-white {
  background-color: #fff;
  color: #777;
}
